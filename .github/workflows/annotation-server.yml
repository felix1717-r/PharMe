name: Annotation Server

on:
  push:
    paths:
      - '.github/workflows/annotation-server.yml'
      - 'annotation-server/**'

defaults:
  run:
    working-directory: ./annotation-server

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: yarn
      - run: yarn lint

  test-e2e-unit:
    name: Test E2E and Unit
    runs-on: ubuntu-latest
    env:
      DB_HOST: postgres
      GOOGLESHEET_ID: ${{ secrets.GOOGLESHEET_ID }}
      EMPTY_GOOGLESHEET_ID: ${{ secrets.EMPTY_GOOGLESHEET_ID }}
      GOOGLESHEET_APIKEY: ${{ secrets.GOOGLESHEET_APIKEY }}
    container:
      image: node:17
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: annotation_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
      - run: python -m pip install -r requirements.txt
      - run: yarn
      - run: yarn test
      - run: yarn test:e2e:cov
      - uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: annotation-server/coverage

  codecov:
    name: Generate Code Coverage Report
    needs: [test-e2e-unit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: annotation-server/coverage
      - uses: codecov/codecov-action@v2
        with:
          flags: annotation-server
          directory: annotation-server/coverage

  build:
    name: Build
    needs: [lint, test-e2e-unit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: yarn
      - run: yarn build

  build-and-push-image:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [lint, test-e2e-unit, build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}-annotation-server
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./annotation-server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # TODO: this job should be re-enabled as part of #438
  # deploy:
  #       name: Deploy
  #       # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #       needs: [build-and-push-image]
  #       runs-on: ubuntu-latest
  #       env:
  #         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  #
  #       steps:
  #         - name: Checkout
  #           uses: actions/checkout@v3
  #
  #         - name: Create namespace
  #           uses: actions-hub/kubectl@master
  #           with:
  #             # creates ns only if it does not exist
  #             args: apply -f ./annotation-server/deployment/namespace.yml
  #
  #         # Apply, deploy, and observe status of annotation server
  #         - name: Apply deployment (annotation Server)
  #           uses: actions-hub/kubectl@master
  #           with:
  #             args: -n annotation-server apply -f ./annotation-server/deployment/app/deployment.yml
  #
  #         - name: Deploy annotation server
  #           uses: actions-hub/kubectl@master
  #           with:
  #             args: -n annotation-server rollout restart deploy annotation-server
  #
  #         - name: Watch deployment (annotation server)
  #           uses: actions-hub/kubectl@master
  #           with:
  #             args: -n annotation-server rollout status -w deployment/annotation-server
  #
  #         # Apply, deploy, and observe status of database
  #         - name: Apply deployment (database)
  #           uses: actions-hub/kubectl@master
  #           with:
  #             args: -n annotation-server apply -f ./annotation-server/deployment/app/db.yml
  #
  #         - name: Deploy database
  #           uses: actions-hub/kubectl@master
  #           with:
  #             args: -n annotation-server rollout restart deploy annotation-server-db
  #
  #         - name: Watch deployment (database)
  #           uses: actions-hub/kubectl@master
  #           with:
  #             args: -n annotation-server rollout status -w deployment/annotation-server-db
